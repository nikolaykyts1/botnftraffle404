from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
import random
from stats import get_user_stats, save_stats
rps_router = Router()
from aiogram import Router
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
import random

rps_router = Router()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞
def rps_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úä –ö–∞–º–µ–Ω—å", callback_data="rps_rock"),
            InlineKeyboardButton(text="‚úã –ë—É–º–∞–≥–∞", callback_data="rps_paper"),
            InlineKeyboardButton(text="‚úåÔ∏è –ù–æ–∂–Ω–∏—Ü—ã", callback_data="rps_scissors")
        ]
    ])

@rps_router.message(Command("rps"))
async def cmd_rps(message: Message):
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞!",
        reply_markup=rps_keyboard()
    )

@rps_router.callback_query(lambda c: c.data.startswith("rps_"))
async def handle_rps_choice(callback):
    user_choice = callback.data.replace("rps_", "")
    choices = ["rock", "paper", "scissors"]
    bot_choice = random.choice(choices)

    choice_names = {
        "rock": "‚úä –ö–∞–º–µ–Ω—å",
        "paper": "‚úã –ë—É–º–∞–≥–∞",
        "scissors": "‚úåÔ∏è –ù–æ–∂–Ω–∏—Ü—ã"
    }

    result_text = get_result(user_choice, bot_choice)

    await callback.message.answer(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {choice_names[user_choice]}\n"
        f"–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {choice_names[bot_choice]}\n\n"
        f"{result_text}"
    )
    await callback.answer()

def get_result(user, bot):
    if user == bot:
        return "üîÅ –ù–∏—á—å—è!"
    elif (
        (user == "rock" and bot == "scissors") or
        (user == "scissors" and bot == "paper") or
        (user == "paper" and bot == "rock")
    ):
        return "üéâ –í—ã –ø–æ–±–µ–¥–∏–ª–∏!"
    else:
        return "üò¢ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!"